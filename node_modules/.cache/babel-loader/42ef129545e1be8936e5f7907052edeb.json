{"remainingRequest":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/babel-loader/lib/index.js!/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dezhi/Documents/HBuilderProjects/vv-company-a/src/components/page/Bar1.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/src/components/page/Bar1.vue","mtime":1700891277632},{"path":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/babel.config.js","mtime":1594005027000},{"path":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/cache-loader/dist/cjs.js","mtime":1700597100915},{"path":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/babel-loader/lib/index.js","mtime":1700597101172},{"path":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/cache-loader/dist/cjs.js","mtime":1700597100915},{"path":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/vue-loader/lib/index.js","mtime":1700597101337}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.reduce\";\nimport * as echarts from 'echarts';\nimport ComBar1 from \"../common/CBar-1.vue\";\nexport default {\n  name: 'tabs',\n  data: function data() {\n    return {\n      changeLabourSide: false,\n      chart0: null,\n      barData: {\n        labourQty: 500,\n        engineeringQty: 2000,\n        hardcostQty: 4600,\n        softcostQty: 1000,\n        financingQty: 1200\n      },\n      option0: {\n        title: {\n          text: ''\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // Use axis to trigger tooltip\n            type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\n          }\n        },\n\n        legend: {\n          data: ['Actual Cost', 'Projection']\n        },\n        xAxis: {\n          type: 'category',\n          data: ['Labourer', 'Engineering', 'Hard Cost', 'Soft Cost', 'Financing']\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            formatter: '${value}' // Formats the y-axis labels to show a dollar sign\n          }\n        },\n\n        series: [{\n          name: 'Actual Cost',\n          type: 'bar',\n          data: [500, 2000, 4600, 1000, 1200],\n          stack: 'total',\n          label: {\n            show: true\n          }\n        }, {\n          name: 'Projection',\n          type: 'bar',\n          stack: 'total',\n          data: [1000, 1000, 1000, 1000, 1000],\n          label: {\n            show: true\n          }\n        }]\n      },\n      gridData: [{\n        name: 'Electrical',\n        actualCost: 1500,\n        forecastCost: null\n      }, {\n        name: 'Mechanical',\n        actualCost: 2300,\n        forecastCost: null\n      }, {\n        name: 'Concrete',\n        actualCost: 3600,\n        forecastCost: null\n      }, {\n        name: 'Installation',\n        actualCost: 200,\n        forecastCost: null\n      }, {\n        name: 'General Labourer',\n        actualCost: 3300,\n        forecastCost: null\n      }, {\n        name: 'Finishing',\n        actualCost: 4500,\n        forecastCost: null\n      }, {\n        name: 'Carpenter',\n        actualCost: 3200,\n        forecastCost: null\n      }, {\n        name: 'Masonry',\n        actualCost: 400,\n        forecastCost: null\n      }]\n    };\n  },\n  methods: {\n    handleBarDataChange: function handleBarDataChange() {\n      var newData = [this.barData.labourQty, this.barData.engineeringQty, this.barData.hardcostQty, this.barData.softcostQty, this.barData.financingQty, this.barData.socksQty];\n      console.log('NEW data is:', newData);\n      this.option0.series[0].data = newData;\n      this.chart0.setOption(this.option0);\n    },\n    getData0: function getData0() {\n      this.chart0 = echarts.init(this.$refs.echarts0);\n      this.chart0.setOption(this.option0);\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  },\n  mounted: function mounted() {\n    this.getData0();\n    //console.log(this.totalActualCost,\"TOTAL\");\n  },\n\n  computed: {\n    total: function total() {\n      return parseInt(this.barData.labourQty) + parseInt(this.barData.financingQty) + parseInt(this.barData.hardcostQty) + parseInt(this.barData.softcostQty) + parseInt(this.barData.engineeringQty);\n    },\n    totalActualCost: function totalActualCost() {\n      // Calculate the total actual cost\n      return this.gridData.reduce(function (total, person) {\n        return total + (person.actualCost || 0);\n      }, 0);\n    },\n    totalForecastCost: function totalForecastCost() {\n      // Calculate the total forecast cost\n      return this.gridData.reduce(function (total, person) {\n        return total + (person.forecastCost || 0);\n      }, 0);\n    }\n  },\n  components: {\n    ComBar1: ComBar1\n  }\n};",{"version":3,"names":["echarts","ComBar1","name","data","changeLabourSide","chart0","barData","labourQty","engineeringQty","hardcostQty","softcostQty","financingQty","option0","title","text","tooltip","trigger","axisPointer","type","legend","xAxis","yAxis","axisLabel","formatter","series","stack","label","show","gridData","actualCost","forecastCost","methods","handleBarDataChange","newData","socksQty","console","log","setOption","getData0","init","$refs","echarts0","resetForm","formName","resetFields","mounted","computed","total","parseInt","totalActualCost","reduce","person","totalForecastCost","components"],"sources":["src/components/page/Bar1.vue"],"sourcesContent":["<template>\n\t<div class=\"\">\n\t\t<div class=\"crumbs\">\n\t\t\t<el-breadcrumb separator=\"/\">\n\t\t\t\t<el-breadcrumb-item>\n\t\t\t\t\t<i class=\"el-icon-lx-copy\"></i>\n\t\t\t\t\tHome >> Projects\n\t\t\t\t</el-breadcrumb-item>\n\t\t\t</el-breadcrumb>\n\t\t</div>\n\t\t<!-- 几个tab页的内容在这里 -->\n\t\t<el-tabs type=\"border-card\">\n\t\t\t<el-tab-pane label=\"Projects Overview\">\n\t\t\t\t<!-- TAB OVERALL STARTS -->\n\t\t\t\t<!-- 总览图的Tab页面 -->\n\t\t\t\t<com-bar1></com-bar1>\n\t\t\t\t<!-- TAB OVERALL ENDS -->\n\t\t\t</el-tab-pane>\n\t\t\t<el-tab-pane label=\"View Star3\" class=\"project-1\">\n\t\t\t\t<el-row :gutter=\"30\">\n\t\t\t\t\t<el-col :span=\"16\">\n\t\t\t\t\t\t<div class=\"bar-container\">\n\t\t\t\t\t\t\t<h2>Actual Cost vs. Projection</h2>\n\t\t\t\t\t\t\t<h5>Total: {{ total }}</h5>\n\t\t\t\t\t\t\t<div ref=\"echarts0\" class=\"chartContain\"></div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</el-col>\n\t\t\t\t\t<el-col :span=\"8\">\n\t\t\t\t\t\t<h2>Data Factors:</h2>\n\t\t\t\t\t\t<div style=\"margin: 20px\"></div>\n\n\t\t\t\t\t\t<el-form label-position=\"Right\" label-width=\"110px\" :model=\"barData\" ref=\"bardataForm\">\n\t\t\t\t\t\t\t<el-form-item label=\"labourQty\">\n\t\t\t\t\t\t\t\t{{ barData.labourQty }}\n\t\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"changeLabourSide = true\">Change</el-button>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t\t<el-form-item label=\"engineeringQty\">\n\t\t\t\t\t\t\t\t<el-input v-model=\"barData.engineeringQty\" style=\"width: 60px\"></el-input>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t\t<el-form-item label=\"hardcostQty\">\n\t\t\t\t\t\t\t\t<el-input v-model=\"barData.hardcostQty\" style=\"width: 60px\"></el-input>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t\t<el-form-item label=\"softcostQty\">\n\t\t\t\t\t\t\t\t<el-input v-model=\"barData.softcostQty\" style=\"width: 60px\"></el-input>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t\t<el-form-item label=\"financingQty\">\n\t\t\t\t\t\t\t\t<el-input v-model=\"barData.financingQty\" style=\"width: 60px\"></el-input>\n\t\t\t\t\t\t\t</el-form-item>\n\n\t\t\t\t\t\t\t<el-form-item>\n\t\t\t\t\t\t\t\t<el-button type=\"primary\" @click=\"handleBarDataChange\">Submit</el-button>\n\t\t\t\t\t\t\t</el-form-item>\n\t\t\t\t\t\t</el-form>\n\t\t\t\t\t\t<h5>Total:{{ total }}</h5>\n\t\t\t\t\t</el-col>\n\t\t\t\t</el-row>\n\t\t\t</el-tab-pane>\n\t\t\t<el-tab-pane label=\"Lamp Lighter\">TODO - PROJECT TWO</el-tab-pane>\n\t\t\t<el-tab-pane label=\"Linesight\">TODO - PROJECT THREE</el-tab-pane>\n\t\t</el-tabs>\n\n\t\t<!-- 改变数量的侧边栏目 -->\n\t\t<el-drawer title=\"Edit the Labourer Cost\" :visible.sync=\"changeLabourSide\" direction=\"rtl\" size=\"40%\">\n\t\t\t<el-table :data=\"gridData\">\n\t\t\t\t<el-table-column property=\"name\" label=\"Labourer Type\" width=\"210\"></el-table-column>\n\t\t\t\t<el-table-column label=\"Actual Cost(CAD)\">\n\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t<el-input v-model=\"scope.row.actualCost\" placeholder=\"Enter Actual Cost\"></el-input>\n\t\t\t\t\t</template>\n\t\t\t\t</el-table-column>\n\t\t\t\t<el-table-column label=\"Forecast Cost(CAD)\">\n\t\t\t\t\t<template slot-scope=\"scope\">\n\t\t\t\t\t\t<el-input v-model=\"scope.row.forecastCost\" placeholder=\"Enter Forecast Cost\"></el-input>\n\t\t\t\t\t</template>\n\t\t\t\t</el-table-column>\n\t\t\t</el-table>\n\t\t\t{{ totalForecastCost }}\n\t\t\t\n\t\t\t\n\t\t</el-drawer>\n\t</div>\n</template>\n\n<script>\nimport * as echarts from 'echarts';\nimport ComBar1 from '../common/CBar-1.vue';\nexport default {\n\tname: 'tabs',\n\tdata() {\n\t\treturn {\n\t\t\tchangeLabourSide: false,\n\t\t\tchart0: null,\n\t\t\tbarData: {\n\t\t\t\tlabourQty: 500,\n\t\t\t\tengineeringQty: 2000,\n\t\t\t\thardcostQty: 4600,\n\t\t\t\tsoftcostQty: 1000,\n\t\t\t\tfinancingQty: 1200\n\t\t\t},\n\t\t\toption0: {\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: ''\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\ttrigger: 'axis',\n\t\t\t\t\taxisPointer: {\n\t\t\t\t\t\t// Use axis to trigger tooltip\n\t\t\t\t\t\ttype: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\tdata: ['Actual Cost', 'Projection']\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tdata: ['Labourer', 'Engineering', 'Hard Cost', 'Soft Cost', 'Financing']\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '${value}' // Formats the y-axis labels to show a dollar sign\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tseries: [\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Actual Cost',\n\t\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t\tdata: [500, 2000, 4600, 1000, 1200],\n\t\t\t\t\t\tstack: 'total',\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tshow: true\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tname: 'Projection',\n\t\t\t\t\t\ttype: 'bar',\n\t\t\t\t\t\tstack: 'total',\n\t\t\t\t\t\tdata: [1000, 1000, 1000, 1000, 1000],\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tshow: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t]\n\t\t\t},\n\t\t\tgridData: [\n\t\t\t\t{ name: 'Electrical', actualCost: 1500, forecastCost: null },\n\t\t\t\t{ name: 'Mechanical', actualCost: 2300, forecastCost: null },\n\t\t\t\t{ name: 'Concrete', actualCost: 3600, forecastCost: null },\n\t\t\t\t{ name: 'Installation', actualCost: 200, forecastCost: null },\n\t\t\t\t{ name: 'General Labourer', actualCost: 3300, forecastCost: null },\n\t\t\t\t{ name: 'Finishing', actualCost: 4500, forecastCost: null },\n\t\t\t\t{ name: 'Carpenter', actualCost: 3200, forecastCost: null },\n\t\t\t\t{ name: 'Masonry', actualCost: 400, forecastCost: null }\n\t\t\t]\n\t\t};\n\t},\n\tmethods: {\n\t\thandleBarDataChange() {\n\t\t\tvar newData = [\n\t\t\t\tthis.barData.labourQty,\n\t\t\t\tthis.barData.engineeringQty,\n\t\t\t\tthis.barData.hardcostQty,\n\t\t\t\tthis.barData.softcostQty,\n\t\t\t\tthis.barData.financingQty,\n\t\t\t\tthis.barData.socksQty\n\t\t\t];\n\t\t\tconsole.log('NEW data is:', newData);\n\t\t\tthis.option0.series[0].data = newData;\n\t\t\tthis.chart0.setOption(this.option0);\n\t\t},\n\t\tgetData0() {\n\t\t\tthis.chart0 = echarts.init(this.$refs.echarts0);\n\t\t\tthis.chart0.setOption(this.option0);\n\t\t},\n\t\tresetForm(formName) {\n\t\t\tthis.$refs[formName].resetFields();\n\t\t}\n\t},\n\tmounted() {\n\t\tthis.getData0();\n\t\t//console.log(this.totalActualCost,\"TOTAL\");\n\t},\n\tcomputed: {\n\t\ttotal: function () {\n\t\t\treturn (\n\t\t\t\tparseInt(this.barData.labourQty) +\n\t\t\t\tparseInt(this.barData.financingQty) +\n\t\t\t\tparseInt(this.barData.hardcostQty) +\n\t\t\t\tparseInt(this.barData.softcostQty) +\n\t\t\t\tparseInt(this.barData.engineeringQty)\n\t\t\t);\n\t\t},\n\t\ttotalActualCost() {\n\t\t\t// Calculate the total actual cost\n\t\t\treturn this.gridData.reduce((total, person) => total + (person.actualCost || 0), 0);\n\t\t},\n\t\ttotalForecastCost() {\n\t\t\t// Calculate the total forecast cost\n\t\t\treturn this.gridData.reduce((total, person) => total + (person.forecastCost || 0), 0);\n\t\t}\n\t},\n\tcomponents: {\n\t\tComBar1\n\t}\n};\n</script>\n\n<style scoped>\n.project-1 {\n\tpadding-top: 30px;\n}\n.bar-container {\n\twidth: 600px;\n\theight: 460px;\n\tmargin: 0 auto;\n}\n.bar-container h2 {\n\ttext-align: center;\n}\n\n.chartContain {\n\t/* width: 100%;\n\theight: 100%; */\n\twidth: 600px;\n\theight: 400px;\n}\n\n.message-title {\n\tcursor: pointer;\n}\n.handle-row {\n\tmargin-top: 30px;\n}\n</style>\n"],"mappings":"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"}]}