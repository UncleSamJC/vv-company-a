{"remainingRequest":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/thread-loader/dist/cjs.js!/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/babel-loader/lib/index.js!/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dezhi/Documents/HBuilderProjects/vv-company-a/src/components/page/Bar1.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/src/components/page/Bar1.vue","mtime":1700637820831},{"path":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/babel.config.js","mtime":1594005027000},{"path":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/cache-loader/dist/cjs.js","mtime":1700597100915},{"path":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/thread-loader/dist/cjs.js","mtime":1700597099864},{"path":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/babel-loader/lib/index.js","mtime":1700597101172},{"path":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/cache-loader/dist/cjs.js","mtime":1700597100915},{"path":"/Users/dezhi/Documents/HBuilderProjects/vv-company-a/node_modules/vue-loader/lib/index.js","mtime":1700597101337}],"contextDependencies":[],"result":["import * as echarts from 'echarts';\nimport ComBar1 from \"../common/CBar-1.vue\";\nexport default {\n  name: 'tabs',\n  data: function data() {\n    return {\n      chart0: null,\n      barData: {\n        labourQty: 500,\n        engineeringQty: 2000,\n        hardcostQty: 4600,\n        softcostQty: 1000,\n        financingQty: 1200\n      },\n      option0: {\n        title: {\n          text: 'Note for Bar-1 TBD'\n        },\n        tooltip: {\n          trigger: 'axis',\n          axisPointer: {\n            // Use axis to trigger tooltip\n            type: 'shadow' // 'shadow' as default; can also be 'line' or 'shadow'\n          }\n        },\n\n        legend: {\n          data: ['Actual Cost', 'Projection']\n        },\n        xAxis: {\n          type: 'category',\n          data: ['Labour', 'Engineering', 'Hard Cost', 'Soft Cost', 'Financing']\n        },\n        yAxis: {\n          type: 'value',\n          axisLabel: {\n            formatter: '${value}' // Formats the y-axis labels to show a dollar sign\n          }\n        },\n\n        series: [{\n          name: 'Actual Cost',\n          type: 'bar',\n          data: [500, 2000, 4600, 1000, 1200],\n          stack: 'total',\n          label: {\n            show: true\n          }\n        }, {\n          name: 'Projection',\n          type: 'bar',\n          stack: 'total',\n          data: [1000, 1000, 1000, 1000, 1000],\n          label: {\n            show: true\n          }\n        }]\n      }\n    };\n  },\n  methods: {\n    handleBarDataChange: function handleBarDataChange() {\n      var newData = [this.barData.labourQty, this.barData.engineeringQty, this.barData.hardcostQty, this.barData.softcostQty, this.barData.financingQty, this.barData.socksQty];\n      console.log('NEW data is:', newData);\n      this.option0.series[0].data = newData;\n      this.chart0.setOption(this.option0);\n    },\n    getData0: function getData0() {\n      this.chart0 = echarts.init(this.$refs.echarts0);\n      this.chart0.setOption(this.option0);\n    },\n    resetForm: function resetForm(formName) {\n      this.$refs[formName].resetFields();\n    }\n  },\n  mounted: function mounted() {\n    this.getData0();\n  },\n  computed: {\n    total: function total() {\n      return parseInt(this.barData.labourQty) + parseInt(this.barData.financingQty) + parseInt(this.barData.hardcostQty) + parseInt(this.barData.softcostQty) + parseInt(this.barData.engineeringQty);\n      //parseInt(this.barData.labourQty+this.barData.engineeringQty+this.barData.hardcostQty+this.barData.softcostQty+this.barData.financingQty);\n    }\n  },\n\n  components: {\n    ComBar1: ComBar1\n  }\n};",null]}